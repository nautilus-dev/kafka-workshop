# =====================================================
# Platform: default
# =====================================================
version: '3.0'
# enforce some dependencies
# enforce some dependencies
# enforce some dependencies
services:
  #  ================================== Zookeeper ========================================== #}
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.4.0
    container_name: zookeeper-1
    hostname: zookeeper-1
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    restart: unless-stopped
  zoonavigator:
    image: elkozmon/zoonavigator-web:latest
    container_name: zoonavigator
    hostname: zoonavigator
    labels:
      com.mdps.service.webui.url: http://${PUBLIC_IP}:28100
    ports:
      - 28100:8010
    environment:
      WEB_HTTP_PORT: 8010
      API_HOST: zoonavigator-api
      API_PORT: 9010
    depends_on:
      - zoonavigator-api
    restart: unless-stopped
  zoonavigator-api:
    image: elkozmon/zoonavigator-api:latest
    container_name: zoonavigator-api
    labels:
      com.mdps.service.restapi.url: http://${PUBLIC_IP}:28101
    ports:
      - 28101:9010
    environment:
      API_HTTP_PORT: 9010
    restart: unless-stopped
  #  ================================== Kafka ========================================== #}
  kafka-1:
    image: confluentinc/cp-kafka:5.4.0
    container_name: kafka-1
    hostname: kafka-1
    depends_on:
      - zookeeper-1
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: r1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://kafka-1:19092,LISTENER_DOCKERHOST://kafka-1:29092,LISTENER_EXTERNAL://kafka-1:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-1:19092,LISTENER_DOCKERHOST://localhost:29092,LISTENER_EXTERNAL://${PUBLIC_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_DOCKERHOST:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DELETE_TOPIC_ENABLE: 'True'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'False'
      KAFKA_JMX_PORT: 9094
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9094
      KAFKA_JMX_HOSTNAME: kafka-1
    restart: unless-stopped
  kafka-2:
    image: confluentinc/cp-kafka:5.4.0
    container_name: kafka-2
    hostname: kafka-2
    depends_on:
      - zookeeper-1
    ports:
      - 9093:9093
      - 29093:29093
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: r2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://kafka-2:19093,LISTENER_DOCKERHOST://kafka-2:29093,LISTENER_EXTERNAL://kafka-2:9093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-2:19093,LISTENER_DOCKERHOST://localhost:29093,LISTENER_EXTERNAL://${PUBLIC_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_DOCKERHOST:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DELETE_TOPIC_ENABLE: 'True'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'False'
      KAFKA_JMX_PORT: 9095
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9095
      KAFKA_JMX_HOSTNAME: kafka-2
    restart: unless-stopped
  kafka-3:
    image: confluentinc/cp-kafka:5.4.0
    container_name: kafka-3
    hostname: kafka-3
    depends_on:
      - zookeeper-1
    ports:
      - 9094:9094
      - 29094:29094
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_BROKER_RACK: r3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://kafka-3:19094,LISTENER_DOCKERHOST://kafka-3:29094,LISTENER_EXTERNAL://kafka-3:9094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka-3:19094,LISTENER_DOCKERHOST://localhost:29094,LISTENER_EXTERNAL://${PUBLIC_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_DOCKERHOST:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_DELETE_TOPIC_ENABLE: 'True'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'False'
      KAFKA_JMX_PORT: 9096
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9096
      KAFKA_JMX_HOSTNAME: kafka-3
    restart: unless-stopped
  #  ================================== Schema Registry ========================================== #}
  schema-registry-1:
    image: confluentinc/cp-schema-registry:5.4.0
    hostname: schema-registry-1
    container_name: schema-registry-1
    labels:
      com.mdps.service.restapi.url: http://${PUBLIC_IP}:8081
    depends_on:
      - zookeeper-1
      - kafka-1
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-1:19092
      SCHEMA_REGISTRY_MASTER_ELIGIBILITY: 'true'
      SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR: 1
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN: '*'
      SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS: GET,POST,PUT,OPTIONS
    restart: unless-stopped
  #  ================================== Schema Registry UI ========================================== #}
  schema-registry-ui:
    image: landoop/schema-registry-ui:latest
    container_name: schema-registry-ui
    hostname: schema-registry-ui
    labels:
      com.mdps.service.webui.url: http://${PUBLIC_IP}:28102
    depends_on:
      - kafka-1
      - schema-registry-1
    ports:
      - 28102:8000
    environment:
      SCHEMAREGISTRY_URL: http://${PUBLIC_IP}:8081
    restart: unless-stopped
  #  ================================== Confluent REST Proxy ========================================== #}	
  kafka-rest-1:	
    image: confluentinc/cp-kafka-rest:5.4.0	
    container_name: kafka-rest-1	
    hostname: kafka-rest-1	
    labels:	
      com.mdps.service.restapi.url: http://${PUBLIC_IP}:18086	
    depends_on:	
      - kafka-1	
      - schema-registry-1	
    ports:	
      - 18086:8086	
    environment:	
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:19092	
      KAFKA_REST_LISTENERS: http://0.0.0.0:8086	
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081	
      KAFKA_REST_HOST_NAME: kafka-rest-1	
    restart: unless-stopped
  #  ================================== Kafka Topics UI ========================================== #}
  kafka-topics-ui:
    image: landoop/kafka-topics-ui:latest
    container_name: kafka-topics-ui
    hostname: kafka-topics-ui
    labels:
      com.mdps.service.webui.url: http://${PUBLIC_IP}:28141
    depends_on:
      - kafka-1
      - kafka-rest-1
    ports:
      - 28141:8000
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest-1:8086
      LAZY_LOAD_TOPIC_META: 'false'
      PROXY: 'true'
    restart: unless-stopped

  #  ================================== Cluster Manager for Apache Kafka (CMAK) ========================================== #}
  cmak:
    image: trivadis/cmak:latest
    container_name: cmak
    hostname: cmak
    labels:
      com.mdps.service.webui.url: http://${PUBLIC_IP}:28104
    depends_on:
      - zookeeper-1
      - kafka-1
    ports:
      - 28104:9000
    environment:
      ZK_HOSTS: zookeeper-1:2181
      APPLICATION_SECRET: abc123!
    restart: unless-stopped
  #  ================================== Apache Kafka HQ (AKHQ) ========================================== #}
  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    hostname: akhq
    labels:
      com.mdps.service.webui.url: http://${PUBLIC_IP}:28107
    ports:
      - 28107:8080
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka-1:19092"
              schema-registry:
                url: "http://schema-registry-1:8081"
              connect:
                url: "http://kafka-connect-1:8083"
    depends_on:
      - kafka-1
    restart: unless-stopped
  #  ================================== Jupyter ========================================== #}
  jupyter:
    image: jupyter/all-spark-notebook:7a0c7325e470
    container_name: jupyter
    hostname: jupyter
    labels:
      com.mdps.service.webui.name: Jupyter UI
      com.mdps.service.webui.url: http://${PUBLIC_IP}:28888
    ports:
      - 28888:8888
    environment:
      JUPYTER_ENABLE_LAB: 'true'
      JUPYTER_TOKEN: abc123!
      GRANT_SUDO: 'true'
      TINI_SUBREAPER: 'true'
    restart: unless-stopped
 
